Este programa/libreria te permite obtener el href y texto de los links de archivos markdown y analizar los links únicos, rotos y totales.

1. INICIO
2. Usuario ejecuta modulo con sus argumentos
3. LEER el primer argumento que es ruta
4. SI ruta es absoluta 
    ENTONCES
    Leer el contenido de la ruta
   SI NO
      SI ruta es relativa
        ENTONCES
        Convertir ruta a absoluta y leer contenido de la ruta
      SI NO 
        Imprimir mensaje para ingresar una ruta válida
   FIN de condición
4.1 SI ruta es un archivo
      ENTONCES 
      SI archivo es markdown
        ENTONCES
        función para buscar los links del archivo
        leer los links, obteniendo su href y texto
        Almacenar el href y texto en un array de objetos
        SI texto mayor a 50 caracteres 
          ENTONCES 
          Limitar texto a 50 caracteres
      SI NO 
          Imprimir mensaje para ingresar una ruta válida
    SI NO ruta es un directorio
      ENTONCES
      Leer directorio
      Aplicar recursión a directorio
      Ejecutar caso base: Encontrar archivo markdown
    SI NO 
      Imprimir mensaje para ingresar una ruta válida
5. SI segundo argumento es !existe
    ENTONCES
    Imprimir la ruta, el href y texto truncado a 50 caracteres
5.1 SI NO es --validate
        ENTONCES 
        Ejecutar función para validar si los links almacenados en array funcionan asignandoles un OK si no FAIL
5.1.1   Imprimir ruta, href, texto y OK o FAIL
5.2 SI NO es --stats
        ENTONCES
        Calcular links totales encontrados en los/el archivo(s)
        Calcular links únicos en el/los archivo(s)
        Almacenar links en array de objectos
5.2.1   Imprimir links totales y únicos
5.3 SI NO es --validate y --stats
        ENTONCES
        Calcular links rotos ejecutando la función --validate y sacando solo los que son FAIL y almacenarlos en array de objetos como broken
        Calcular los links  totales y unicos ejecutando la función --stats para obtener y almacenarlos en array de objetos
5.3.1   Imprimir links totales, únicos y broken 
6. Fin